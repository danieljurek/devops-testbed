# trigger: 
#   branches:
#     include:
#       - main

pr:
  branches:
    include:
      - main

jobs: 
  - job: setupazd
    variables:
      PoolName: azsdk-pool
      Demand: 
      ImageName: 
    pool:
      name: $(PoolName)
      demands: ImageOverride -equals windows-2022

    steps: 
    - pwsh: |
        Write-Host '##vso[task.setvariable variable=VCPKG_BINARY_SOURCES_SECRET;issecret=true;]clear;x-azblob,https://azuresdkartifacts.blob.core.windows.net/public-vcpkg-container,,read'
        Write-Host '##vso[task.setvariable variable=X_VCPKG_ASSET_SOURCES_SECRET;issecret=true;]clear;x-azurl,https://azuresdkartifacts.blob.core.windows.net/public-vcpkg-container,,read'
      displayName: Set vcpkg variables

    - script: vcpkg --version
      condition: >-
        and(
        succeeded(),
        eq(variables['Agent.OS'], 'Windows_NT')
        )
      displayName: vcpkg --version

    - pwsh: |
        vcpkg install openssl --debug
        Write-Host "##vso[task.setvariable variable=VCPKG_ROOT;]${env:VCPKG_INSTALLATION_ROOT}"
        Write-Host "##vso[task.setvariable variable=VCPKG_INSTALLED_ROOT;]$PWD\vcpkg_installed"
        Write-Host "##vso[task.setvariable variable=OPENSSL_DIR;]$PWD\vcpkg_installed\x64-windows"
      condition: >-
        and(
        succeeded(),
        eq(variables['Agent.OS'], 'Windows_NT')
        )
      displayName: vcpkg install openssl --debug
      env:
        VCPKG_BINARY_SOURCES: $(VCPKG_BINARY_SOURCES_SECRET)
        X_VCPKG_ASSET_SOURCES: $(X_VCPKG_ASSET_SOURCES_SECRET)
