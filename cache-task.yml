jobs:
  - job: ValidateCacheTask
    strategy:
      matrix:
        Ubuntu16:
          Pool: Azure Pipelines
          OSVmImage: ubuntu-16.04
        Ubuntu16Hosted:
          Pool: azsdk-pool-mms-ubuntu-1604-general
          OSVmImage: MMSUbuntu16.04
        Ubuntu18:
          Pool: Azure Pipelines
          OSVmImage: ubuntu-18.04
        Ubuntu20:
          Pool: Azure Pipelines
          OSVmImage: ubuntu-20.04
    pool:
      name: $(Pool)
      vmImage: $(OSVmImage)
      CacheTestPath: $(Agent.TempDirectory)/cache-test
      CacheFilePath: $(CacheTestPath)/cache.text
    steps:

      # - script: sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf
      #   displayName: Bypass local DNS server to workaround issue resolving cognitiveservices names
      #   condition: |
      #     and(
      #       succeededOrFailed(),
      #       contains(variables['OSVmImage'], 'ubuntu'),
      #       eq(variables['Container'], '')
      #     )

      - pwsh: New-Item -ItemType Directory -Force -Path $(CacheTestPath)
        displayName: Create folder for test file

      - task: Cache@2
        inputs:
          key: test-cache-2 | "$(OSVmImage)"
          path: $(CacheTestPath)
          cacheHitVar: CacheRestoreSuccess
        displayName: Cache
      
      - bash: echo -e "Cache file contents\n====================\n"$(cat $(CacheFilePath))"\n===================="
        displayName: Show file contents 1

      - bash: echo "hello world" > $(CacheFilePath)
        displayName: Write to file if cache did not restore
        condition: ne(variables['CacheRestoreSuccess'], true)

      - bash: echo -e "Cache file contents\n====================\n"$(cat $(CacheFilePath))"\n===================="
        displayName: Show file contents 2